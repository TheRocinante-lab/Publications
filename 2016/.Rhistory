source('~/Dropbox/CombineKernels/CombineKernels.R')
setwd("~/Dropbox/CombineKernels")
source("CombKernFunctions.R")
setwd("~/Dropbox/CombineKernels")
load("DistancesForWheatDatasets.RData")
load("KmatsForWheatDatasets.RData")
source("CombKernFunctions.R")
Kinvmat<-CombineKernelsIterativeHmat(Klist=list(addDiag(K1),addDiag(K4),addDiag(K5),addDiag(K6),addDiag(K7),addDiag(K9),addDiag(K10),addDiag(K11),addDiag(K12),addDiag(K13),addDiag(K14),addDiag(K15),addDiag(K16),addDiag(K17),addDiag(K19),addDiag(K20),addDiag(K21),addDiag(K22)),Kinvlist=NULL, mc.cores=1)
Kmat3<-solve(Kinvmat)
K11[1:5,1:5]
save(Kinvmat,Kmat3, file="CombinedKmat3ForWheatDatasets.RData")
cormat
average(cormat)
rowMeans(cormat)
load("/Users/JIS/Dropbox/CombineKernels/cormatforwheatdataYLDK1.RData")
rowMeans(cormat)
load("/Users/JIS/Dropbox/CombineKernels/cormatforwheatdataYLDK3.RData")
rowMeans(cormat)
library(EMMREML)
source("http://bioconductor.org/biocLite.R")
biocLite("VariantAnnotation")
dnorm(5,3)
normal <- function(x, mu = 0, sigma = 1) {
# x: values on x-axis
# mu: mean value
# sigma: standard deviation
# output
1 / (sigma * sqrt(2*pi)) * exp(-0.5 * ((x - mu)/ sigma)^2)
}
normal(1.5)
normal(1,5)
x <- seq(-4, 4, length.out = 500)
y <- normal(x)
# standard normal curve plot
op = par(mar = c(2.5,1,1,1))
plot(x, y, type = 'l', col = '#00ABFF', lwd = 3,
axes = FALSE, xlab = '', ylab = '')
axis(side = 1, at = seq(-4, 4, by = 1))
dnorm(0,0,0.5)
dnorm(0,0,0.5)
xseq<-seq(-4,4,.01)
densities<-dnorm(xseq, 0,1)
plot(xseq, densities, col="darkgreen",xlab="", ylab="Density",
type="l",lwd=2, cex=2, main="PDF of Standard Normal", cex.axis=.8)
xseq<-seq(-5,5,.01)
densities<-dnorm(xseq, 0,1)
plot(xseq, densities, col="darkgreen",xlab="", ylab="Density",
type="l",lwd=2, cex=2, main="PDF of Standard Normal", cex.axis=.8)
x   <- seq(5,15,length=1000)
y   <- dnorm(x,mean=10, sd=3)
plot(x,y, type="l", lwd=1)
plot(xseq, densities, col="darkgreen",xlab="", ylab="Density",
type="l",lwd=4, cex=2, main="PDF of Standard Normal", cex.axis=.8)
plot(xseq, densities, col="red",xlab="", ylab="Density",
type="l",lwd=4, cex=2, main="PDF of Standard Normal", cex.axis=.8)
plot(xseq, densities, col="blue",xlab="", ylab="Density",
type="l",lwd=4, cex=2, main="PDF of Standard Normal", cex.axis=.8)
plot(xseq, densities, col="blue",xlab="", ylab="Density",
type="l",lwd=4, cex=2, cex.axis=.8)
?plot
plot(xseq, densities, col="blue",xlab="", ylab="Density",
type="l",lwd=4, cex=2, cex.axis=.8,yaxt="n")
plot(xseq, densities, col="blue",xlab="", ylab="Density",
type="l",lwd=4, cex=2, cex.axis=.8,xaxt="n")
plot(xseq, densities, col="blue",xlab="", ylab="Density",
type="l",lwd=4, cex=2, cex.axis=.8,frame.plot = =F)
dnorm(5,3)
normal <- function(x, mu = 0, sigma = 1) {
# x: values on x-axis
# mu: mean value
# sigma: standard deviation
# output
1 / (sigma * sqrt(2*pi)) * exp(-0.5 * ((x - mu)/ sigma)^2)
}
normal(1,5)
x <- seq(-4, 4, length.out = 500)
y <- normal(x)
# standard normal curve plot
op = par(mar = c(2.5,1,1,1))
plot(x, y, type = 'l', col = '#00ABFF', lwd = 3,
axes = FALSE, xlab = '', ylab = '')
axis(side = 1, at = seq(-4, 4, by = 1))
op = par(mar = c(2.5,1,1,1))
plot(x, y, type = 'l', col = '#00ABFF', lwd = 3,
axes = FALSE, xlab = '', ylab = '')
axis(side = 1, at = seq(-4, 4, by = 1))
dnorm(0,0,0.5)
xseq<-seq(-5,5,.01)
densities<-dnorm(xseq, 0,1)
plot(xseq, densities, col="blue",xlab="", ylab="Density",
type="l",lwd=4, cex=2, cex.axis=.8, =F)
axes = FALSE, xlab = '', ylab = '')
axis(side = 1, at = seq(-4, 4, by = 1))
dnorm(0,0,0.5)
xseq<-seq(-5,5,.01)
densities<-dnorm(xseq, 0,1)
plot(xseq, densities, col="blue",xlab="", ylab="Density",
type="l",lwd=4, cex=2, cex.axis=.8, )
xseq<-seq(-5,5,.01)
parents<-dnorm(xseq, 0,1)
offspring <- dnorm(xseq,0,3)
plot(xseq, parents, col="blue",xlab="", ylab="Density",
type="l",lwd=4, cex=2, cex.axis=.8, )
par(new=TRUE)
plot(xseq, offspring, col="red",xlab="", ylab="Density",
type="l",lwd=4, cex=2, cex.axis=.8, )
offspring <- dnorm(xseq,0,2)
plot(xseq, parents, col="blue",xlab="", ylab="Density",
type="l",lwd=4, cex=2, cex.axis=.8, )
par(new=TRUE)
plot(xseq, offspring, col="red",xlab="", ylab="Density",
type="l",lwd=4, cex=2, cex.axis=.8, )
xseq<-seq(-5,5,.01)
parents<-dnorm(xseq, 0,1)
offspring <- dnorm(xseq,0,0.5)
plot(xseq, parents, col="blue",xlab="", ylab="Density",
type="l",lwd=4, cex=2, cex.axis=.8, )
par(new=TRUE)
plot(xseq, offspring, col="red",xlab="", ylab="Density",
type="l",lwd=4, cex=2, cex.axis=.8, )
xseq<-seq(-5,5,.01)
parents<-dnorm(xseq, 0,1)
offspring <- dnorm(xseq,0,1.3)
plot(xseq, parents, col="blue",xlab="", ylab="Density",
type="l",lwd=4, cex=2, cex.axis=.8, )
par(new=TRUE)
plot(xseq, offspring, col="red",xlab="", ylab="Density",
type="l",lwd=4, cex=2, cex.axis=.8, )
xseq<-seq(-5,5,.01)
parents<-dnorm(xseq, 0,1)
offspring <- dnorm(xseq,0,1,0.5)
plot(xseq, parents, col="blue",xlab="", ylab="Density",
type="l",lwd=4, cex=2, cex.axis=.8, )
par(new=TRUE)
plot(xseq, offspring, col="red",xlab="", ylab="Density",
type="l",lwd=4, cex=2, cex.axis=.8, )
xseq<-seq(-5,5,.01)
parents<-dnorm(xseq, 0,1)
offspring <- dnorm(xseq,0,1.5)
plot(xseq, parents, col="blue",xlab="", ylab="Density",
type="l",lwd=4, cex=2, cex.axis=.8, )
par(new=TRUE)
plot(xseq, offspring, col="red",xlab="", ylab="Density",
type="l",lwd=4, cex=2, cex.axis=.8, )
xseq<-seq(-5,5,.01)
parents<-dnorm(xseq, 0,1)
offspring <- dnorm(xseq,0,0.9)
plot(xseq, parents, col="blue",xlab="", ylab="Density",
type="l",lwd=4, cex=2, cex.axis=.8, )
par(new=TRUE)
plot(xseq, offspring, col="red",xlab="", ylab="Density",
type="l",lwd=4, cex=2, cex.axis=.8, )
xseq<-seq(-5,5,.01)
parents<-dnorm(xseq, 0,1)
offspring <- dnorm(xseq,0,0.9)
plot(xseq, parents, col="blue",xlab="", ylab="Density",
type="l",lwd=4, cex=2, cex.axis=.8, )
par(new=TRUE)
plot(xseq, offspring, col="red",xlab="", ylab="Density",
type="l",lwd=4, cex=2, cex.axis=.8, )
xseq2<-seq(-6,6,.01)
offspring <- dnorm(xseq2,0,0.9)
plot(xseq, parents, col="blue",xlab="", ylab="Density",
type="l",lwd=4, cex=2, cex.axis=.8, )
par(new=TRUE)
plot(xseq, offspring, col="red",xlab="", ylab="Density",
type="l",lwd=4, cex=2, cex.axis=.8, )
xseq<-seq(-5,5,.01)
xseq2<-seq(-6,6,.01)
parents<-dnorm(xseq, 0,1)
offspring <- dnorm(xseq2,0,0.9)
plot(xseq, parents, col="blue",xlab="", ylab="Density",
type="l",lwd=4, cex=2, cex.axis=.8, )
par(new=TRUE)
plot(xseq, offspring, col="red",xlab="", ylab="Density",
type="l",lwd=4, cex=2, cex.axis=.8, )
xseq2<-seq(-5,5,.03)
parents<-dnorm(xseq, 0,1)
offspring <- dnorm(xseq2,0,0.9)
plot(xseq, parents, col="blue",xlab="", ylab="Density",
type="l",lwd=4, cex=2, cex.axis=.8, )
par(new=TRUE)
plot(xseq, offspring, col="red",xlab="", ylab="Density",
type="l",lwd=4, cex=2, cex.axis=.8, )
xseq<-seq(-5,5,.01)
xseq2<-seq(-5,5,.03)
parents<-dnorm(xseq, 0,1)
offspring <- dnorm(xseq2,0,0.9)
plot(xseq, parents, col="blue",xlab="", ylab="Density",
type="l",lwd=4, cex=2, cex.axis=.8, )
par(new=TRUE)
plot(xseq, offspring, col="red",xlab="", ylab="Density",
type="l",lwd=4, cex=2, cex.axis=.8, )
offspring <- dnorm(xseq2,0,0.3)
plot(xseq, parents, col="blue",xlab="", ylab="Density",
type="l",lwd=4, cex=2, cex.axis=.8, )
par(new=TRUE)
plot(xseq, offspring, col="red",xlab="", ylab="Density",
type="l",lwd=4, cex=2, cex.axis=.8, )
xseq<-seq(-5,5,.01)
xseq2<-seq(-5,5,.03)
parents<-dnorm(xseq, 0,1)
offspring <- dnorm(xseq2,0,0.3)
plot(xseq, parents, col="blue",xlab="", ylab="Density",
type="l",lwd=4, cex=2, cex.axis=.8, )
par(new=TRUE)
plot(xseq2, offspring, col="red",xlab="", ylab="Density",
type="l",lwd=4, cex=2, cex.axis=.8, )
offspring <- dnorm(xseq2,0,1)
plot(xseq, parents, col="blue",xlab="", ylab="Density",
type="l",lwd=4, cex=2, cex.axis=.8, )
par(new=TRUE)
plot(xseq2, offspring, col="red",xlab="", ylab="Density",
type="l",lwd=4, cex=2, cex.axis=.8, )
xseq<-seq(-5,5,.01)
xseq2<-seq(-5,5,.03)
parents<-dnorm(xseq, 0,1)
offspring <- dnorm(xseq2,0,0.3)
plot(xseq, parents, col="blue",xlab="", ylab="Density",
type="l",lwd=4, cex=2, cex.axis=.8, )
par(new=TRUE)
plot(xseq2, offspring, col="red",xlab="", ylab="Density",
type="l",lwd=4, cex=2, cex.axis=.8, )
xseq<-seq(-5,5,.01)
xseq2<-seq(-5,5,.3)
parents<-dnorm(xseq, 0,1)
offspring <- dnorm(xseq2,0,0.3)
plot(xseq, parents, col="blue",xlab="", ylab="Density",
type="l",lwd=4, cex=2, cex.axis=.8, )
par(new=TRUE)
plot(xseq2, offspring, col="red",xlab="", ylab="Density",
type="l",lwd=4, cex=2, cex.axis=.8, )
xseq<-seq(-5,5,.01)
xseq2<-seq(-5,5,.02)
parents<-dnorm(xseq, 0,1)
offspring <- dnorm(xseq2,0,0.3)
plot(xseq, parents, col="blue",xlab="", ylab="Density",
type="l",lwd=4, cex=2, cex.axis=.8, )
par(new=TRUE)
plot(xseq2, offspring, col="red",xlab="", ylab="Density",
type="l",lwd=4, cex=2, cex.axis=.8, )
xseq<-seq(-5,5,.01)
xseq2<-seq(-5,5,.06)
parents<-dnorm(xseq, 0,1)
offspring <- dnorm(xseq2,0,0.3)
plot(xseq, parents, col="blue",xlab="", ylab="Density",
type="l",lwd=4, cex=2, cex.axis=.8, )
par(new=TRUE)
plot(xseq2, offspring, col="red",xlab="", ylab="Density",
type="l",lwd=4, cex=2, cex.axis=.8, )
xseq<-seq(-5,5,.01)
xseq2<-seq(-5,5,.06)
parents<-dnorm(xseq, 0,1)
offspring <- dnorm(xseq2,0,1)
plot(xseq, parents, col="blue",xlab="", ylab="Density",
type="l",lwd=4, cex=2, cex.axis=.8, )
par(new=TRUE)
plot(xseq2, offspring, col="red",xlab="", ylab="Density",
type="l",lwd=4, cex=2, cex.axis=.8, )
xseq<-seq(-5,5,.01)
xseq2<-seq(-5,5,.06)
parents<-dnorm(xseq, 0,1)
offspring <- dnorm(xseq2,0,1.5)
plot(xseq, parents, col="blue",xlab="", ylab="Density",
type="l",lwd=4, cex=2, cex.axis=.8, )
par(new=TRUE)
plot(xseq2, offspring, col="red",xlab="", ylab="Density",
type="l",lwd=4, cex=2, cex.axis=.8, )
plot(xseq, parents, col="blue",xlab="", ylab="Density",
type="l",lwd=4, cex=2, cex.axis=.8, )
par(new=TRUE)
plot(xseq2, offspring, col="red",xlab="", ylab="Density",
type="l",lwd=4, cex=2, cex.axis=.8, )
segments(x0 = 5, y0 = 0, x1 = 5, y1 = normal(5, mu = 5),
col = 'gray70', lwd = 4, lty = 2)
axis(side = 1, at = seq(2, 8, 1))
text(x = 5, y = 0.05, labels = "mean = 5")
plot(xseq, parents, col="blue",xlab="", ylab="Density",
type="l",lwd=4, cex=2, cex.axis=.8, )
par(new=TRUE)
plot(xseq2, offspring, col="red",xlab="", ylab="Density",
type="l",lwd=4, cex=2, cex.axis=.8, )
segments(x0 = 5, y0 = 0, x1 = 5, y1 = normal(5, mu = 5),
col = 'gray70', lwd = 4, lty = 2)
axis(side = 1, at = seq(2, 8, 1))
text(x =0, y = 0.05, labels = "mean = 5")
plot(xseq, parents, col="blue",xlab="", ylab="Density",
type="l",lwd=4, cex=2, cex.axis=.8, )
par(new=TRUE)
plot(xseq2, offspring, col="red",xlab="", ylab="Density",
type="l",lwd=4, cex=2, cex.axis=.8, )
segments(x0 = 0, y0 = 0, x1 = 0, y1 = normal(0, mu = 0),
col = 'gray70', lwd = 4, lty = 2)
axis(side = 1, at = seq(2, 8, 1))
text(x =0, y = 0.05, labels = "mean = 0")
mean0=0
sd
xseq<-seq(-50,50,.01)
xseq2<-seq(-50,50,.01)
parents<-dnorm(length(xseq), 0,1)
offspring <- dnorm(length(xseq2),0,1.5)
plot(xseq, parents, col="blue",xlab="", ylab="Density",
type="l",lwd=4, cex=2, cex.axis=.8, )
par(new=TRUE)
plot(xseq2, offspring, col="red",xlab="", ylab="Density",
type="l",lwd=4, cex=2, cex.axis=.8, )
rnorm(1000, )
par(new=TRUE)
parents<-dnorm(xseq, 0,1)
offspring <- dnorm(xseq2,0,1.5)
plot(xseq, parents, col="blue",xlab="", ylab="Density",
type="l",lwd=4, cex=2, cex.axis=.8, )
par(new=TRUE)
plot(xseq2, offspring, col="red",xlab="", ylab="Density",
type="l",lwd=4, cex=2, cex.axis=.8, )
mean0=0
sd0p=1
sd0c=1.5
xseq<-seq(-50,50,.01)
xseq2<-seq(-50,50,.01)
parents<-dnorm(length(xseq), 0,1)
offspring <- dnorm(length(xseq2),0,1.5)
plot(xseq, parents, col="blue",xlab="", ylab="Density",
type="l",lwd=4, cex=2, cex.axis=.8, )
par(new=TRUE)
plot(xseq2, offspring, col="red",xlab="", ylab="Density",
type="l",lwd=4, cex=2, cex.axis=.8, )
pop0<-rnorm(1000, mean0,sd0p)
par(new=TRUE)
parents<-dnorm(xseq, 0,1)
offspring <- dnorm(xseq2,0,1.5)
plot(xseq, parents, col="blue",xlab="", ylab="Density",
type="l",lwd=4, cex=2, cex.axis=.8, )
par(new=TRUE)
plot(xseq2, offspring, col="red",xlab="", ylab="Density",
type="l",lwd=4, cex=2, cex.axis=.8, )
´log10(1.6exp-5)
-log10(0.01/2972)
-log10(0.01/1.6exp-5)
-log10(0.05/2972)
-log10(1.6*exp(-5))
-log10(0.01/1.6*exp(-5))
-log10(0.01/1.6*exp(-5))
-log10(0.01/2972)
FDR<-function(pvals, FDR){
pvalss<-sort(pvals, decreasing=F)
m=length(pvalss)
cutoffs<-((1:m)/m)*FDR
logicvec<-pvalss<=cutoffs
postrue<-which(logicvec)
print(postrue)
k<-max(c(postrue,0))
cutoff<-(((0:m)/m)*FDR)[k+1]
return(cutoff)
}
library(devtools)
install_github("kbroman/simcross")
library(devtools)
install_github("kbroman/simcross")
install_github("ggbiplot", "vqv")
data(iris)
data(iris)
data(iris)
head(iris, 3)
log.ir <- log(iris[, 1:4])
ir.species <- iris[, 5]
require("caret")
require("caret")
require("e1071")
install.packages(c("caret","e1071"))
require("caret")
require("e1071")
trans = preProcess(iris[,1:4],
method=c("BoxCox", "center",
"scale", "pca"))
data(iris)
head(iris, 3)
log.ir <- log(iris[, 1:4])
ir.species <- iris[, 5]
ir.pca <- prcomp(log.ir,
center = TRUE,
scale. = TRUE)
print(ir.pca)
plot(ir.pca, type = "l")
summary(ir.pca)
predict(ir.pca,
newdata=tail(log.ir, 2))
library(devtools)
library(ggbiplot)
library(ggbiplot)
g <- ggbiplot(ir.pca, obs.scale = 1, var.scale = 1,
groups = ir.species, ellipse = TRUE,
circle = TRUE)
g <- g + scale_color_discrete(name = '')
g <- g + theme(legend.direction = 'horizontal',
legend.position = 'top')
library(ggbiplot)
require("caret")
require("e1071")
trans = preProcess(iris[,1:4],
method=c("BoxCox", "center",
"scale", "pca"))
PC = predict(trans, iris[,1:4])
install.packages(c("missForest","randomForest"))
y <- c(1564, 1505, 1515, 1511, 1476, 1458, 1526)
x <- c("Lora del Rio","Alcolea","Lora del Rio","Lora del Rio","Alcolea","Alcolea","Palacio")
g <- c("Bollakido","Brankatan","Racheador",
"Breicon","Brankatan","Breicon","Racheador")
pheno <- data.frame(YLD=y,ENV=x,Geno=g)
pheno
str(pheno)
#Fisher's Iris Data
data(iris)
head(iris, 3)
log.ir <- log(iris[, 1:4])
ir.species <- iris[, 5]
# apply PCA - scale. = TRUE is highly
# advisable, but default is FALSE.
ir.pca <- prcomp(log.ir,
center = TRUE,
scale. = TRUE)
print(ir.pca)
plot(ir.pca, type = "l")
summary(ir.pca)
predict(ir.pca,
newdata=tail(log.ir, 2))
library(devtools)
#install_github("ggbiplot", "vqv")
library(ggbiplot)
g <- ggbiplot(ir.pca, obs.scale = 1, var.scale = 1,
groups = ir.species, ellipse = TRUE,
circle = TRUE)
g <- g + scale_color_discrete(name = '')
g <- g + theme(legend.direction = 'horizontal',
legend.position = 'top')
print(g)
#install.packages(c("caret","e1071"))
require("caret")
require("e1071")
trans = preProcess(iris[,1:4],
method=c("BoxCox", "center",
"scale", "pca"))
PC = predict(trans, iris[,1:4])
##imputation
#install.packages(c("missForest","randomForest"))
library(missForest)
library(randomForest)
iris.na <- iris
set.seed(111)
## artificially drop some data values.
for (i in 1:4) iris.na[sample(150, sample(20)), i] <- NA
set.seed(222)
#xtrue is optional full data to see the
#performance of imputation
iris.imp <- missForest(iris.na, xtrue = iris, verbose = TRUE)
iris.imp$ximp[1:3,1:4]
set.seed(333)
iris.rf <- randomForest(Species ~ ., iris.imp$ximp)
#print(iris.rf)
load("/Users/JIS/Dropbox/SelectionofTrainingPopulations/GWAS_STPGA/Simulations/resultsfromsimulations.RData")
resultsarray
sample(1:200)
circlize::chordDiagram(matrix(sample(10),
nrow = 2, ncol = 5))
install.packages("circlize")
circlize::chordDiagram(matrix(sample(10),
nrow = 2, ncol = 5))
setwd("~/Dropbox/GenomicMating/GenomicMatingArticleV2/GM_v2.0")
rm(list=ls())
load("wheatdataready.RData") ## data from training population CHKS data, the pheno are blups already.
library(STPGA)
niterations=2
nelite=2
npop=3
mutprob=.8
mutintensity=2
trainsizevec=c(25)
errorstatvec<-c("CDMEAN","DOPT","PEVMEANMM")
errorstat=errorstatvec[1]
ListTrain1<-GenAlgForSubsetSelectionNoTest(P=geno,ntoselect=trainsizevec,npop=npop, nelite=nelite,
mutprob=mutprob, mutintensity=mutintensity,
niterations=niterations, lambda=1e-5,
plotiters = T, errorstat=errorstat,C=NULL,
mc.cores=3, tolconv=1e-5)
ListTrain1
